local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

print("Script started")

local plr = Players.LocalPlayer
local keys = {W = false, A = false, S = false, D = false}

local flyEnabled = false
local cframeMoveEnabled = false
local deathTpEnabled = false
local autoHitEnabled = false
local criticalHitEnabled = false
local antiFallDamageEnabled = false
local cframeSpeed = 0.2
local checkpointCFrame = nil

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedFlyGui"
screenGui.ResetOnSpawn = false
-- Try CoreGui first, fall back to PlayerGui if needed
local success, err = pcall(function()
    screenGui.Parent = game:GetService("CoreGui")
end)
if success then
    print("ScreenGui parented to CoreGui")
else
    print("Failed to parent to CoreGui: ", err)
    screenGui.Parent = plr.PlayerGui
    print("ScreenGui parented to PlayerGui")
end

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 300)
mainFrame.Position = UDim2.new(0.5, -140, 0.5, -150)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui
mainFrame.Active = true
mainFrame.Draggable = true
print("MainFrame created")

-- Title
local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "RageHub By s3reths"
titleLabel.Size = UDim2.new(1, 0, 0, 25)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 18
titleLabel.Parent = mainFrame
print("TitleLabel created")

-- CFrame Speed label
local speedLabel = Instance.new("TextLabel")
speedLabel.Text = "CFrame Speed:"
speedLabel.Size = UDim2.new(1, -100, 0, 20)
speedLabel.Position = UDim2.new(0, 10, 0, 30)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
speedLabel.Font = Enum.Font.SourceSans
speedLabel.TextSize = 15
speedLabel.TextXAlignment = Enum.TextXAlignment.Left
speedLabel.Parent = mainFrame
print("SpeedLabel created")

-- Speed input textbox
local speedInput = Instance.new("TextBox")
speedInput.Size = UDim2.new(0, 80, 0, 25)
speedInput.Position = UDim2.new(1, -90, 0, 28)
speedInput.Text = tostring(cframeSpeed)
speedInput.ClearTextOnFocus = false
speedInput.TextColor3 = Color3.fromRGB(220, 220, 255)
speedInput.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
speedInput.BorderSizePixel = 0
speedInput.Font = Enum.Font.SourceSans
speedInput.TextSize = 16
speedInput.Parent = mainFrame
print("SpeedInput created")

-- CFrame Move toggle button
local cframeToggle = Instance.new("TextButton")
cframeToggle.Text = "CFrame Move: OFF"
cframeToggle.Size = UDim2.new(0, 260, 0, 30)
cframeToggle.Position = UDim2.new(0, 10, 0, 60)
cframeToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
cframeToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
cframeToggle.Font = Enum.Font.SourceSansBold
cframeToggle.TextSize = 16
cframeToggle.Parent = mainFrame
print("CFrameToggle created")

-- Fly Platform toggle button
local flyToggle = Instance.new("TextButton")
flyToggle.Text = "Fly Platform: OFF (F)"
flyToggle.Size = UDim2.new(0, 260, 0, 30)
flyToggle.Position = UDim2.new(0, 10, 0, 100)
flyToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
flyToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
flyToggle.Font = Enum.Font.SourceSansBold
flyToggle.TextSize = 16
flyToggle.Parent = mainFrame
print("FlyToggle created")

-- Death TP toggle button
local deathTpToggle = Instance.new("TextButton")
deathTpToggle.Text = "Death TP: OFF"
deathTpToggle.Size = UDim2.new(0, 180, 0, 30)
deathTpToggle.Position = UDim2.new(0, 10, 0, 140)
deathTpToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
deathTpToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
deathTpToggle.Font = Enum.Font.SourceSansBold
deathTpToggle.TextSize = 16
deathTpToggle.Parent = mainFrame
print("DeathTpToggle created")

-- Question mark button next to Death TP
local deathTpQuestion = Instance.new("TextButton")
deathTpQuestion.Text = "?"
deathTpQuestion.Size = UDim2.new(0, 30, 0, 30)
deathTpQuestion.Position = UDim2.new(0, 195, 0, 140)
deathTpQuestion.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
deathTpQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
deathTpQuestion.Font = Enum.Font.SourceSansBold
deathTpQuestion.TextSize = 20
deathTpQuestion.Parent = mainFrame
print("DeathTpQuestion created")

-- Auto Hit toggle button
local autoHitToggle = Instance.new("TextButton")
autoHitToggle.Text = "Auto Hit: OFF"
autoHitToggle.Size = UDim2.new(0, 180, 0, 30)
autoHitToggle.Position = UDim2.new(0, 10, 0, 180)
autoHitToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
autoHitToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
autoHitToggle.Font = Enum.Font.SourceSansBold
autoHitToggle.TextSize = 16
autoHitToggle.Parent = mainFrame
print("AutoHitToggle created")

-- Question mark button next to Auto Hit
local autoHitQuestion = Instance.new("TextButton")
autoHitQuestion.Text = "?"
autoHitQuestion.Size = UDim2.new(0, 30, 0, 30)
autoHitQuestion.Position = UDim2.new(0, 195, 0, 180)
autoHitQuestion.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
autoHitQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
autoHitQuestion.Font = Enum.Font.SourceSansBold
autoHitQuestion.TextSize = 20
autoHitQuestion.Parent = mainFrame
print("AutoHitQuestion created")

-- Critical Hit toggle button
local criticalHitToggle = Instance.new("TextButton")
criticalHitToggle.Text = "Critical Hit: OFF"
criticalHitToggle.Size = UDim2.new(0, 180, 0, 30)
criticalHitToggle.Position = UDim2.new(0, 10, 0, 220)
criticalHitToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
criticalHitToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
criticalHitToggle.Font = Enum.Font.SourceSansBold
criticalHitToggle.TextSize = 16
criticalHitToggle.Parent = mainFrame
print("CriticalHitToggle created")

-- Question mark button next to Critical Hit
local criticalHitQuestion = Instance.new("TextButton")
criticalHitQuestion.Text = "?"
criticalHitQuestion.Size = UDim2.new(0, 30, 0, 30)
criticalHitQuestion.Position = UDim2.new(0, 195, 0, 220)
criticalHitQuestion.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
criticalHitQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
criticalHitQuestion.Font = Enum.Font.SourceSansBold
criticalHitQuestion.TextSize = 20
criticalHitQuestion.Parent = mainFrame
print("CriticalHitQuestion created")

-- Anti Fall Damage toggle button
local antiFallDamageToggle = Instance.new("TextButton")
antiFallDamageToggle.Text = "Anti Fall Damage: OFF"
antiFallDamageToggle.Size = UDim2.new(0, 180, 0, 30)
antiFallDamageToggle.Position = UDim2.new(0, 10, 0, 260)
antiFallDamageToggle.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
antiFallDamageToggle.TextColor3 = Color3.fromRGB(230, 230, 255)
antiFallDamageToggle.Font = Enum.Font.SourceSansBold
antiFallDamageToggle.TextSize = 16
antiFallDamageToggle.Parent = mainFrame
print("AntiFallDamageToggle created")

-- Question mark button next to Anti Fall Damage
local antiFallDamageQuestion = Instance.new("TextButton")
antiFallDamageQuestion.Text = "?"
antiFallDamageQuestion.Size = UDim2.new(0, 30, 0, 30)
antiFallDamageQuestion.Position = UDim2.new(0, 195, 0, 260)
antiFallDamageQuestion.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
antiFallDamageQuestion.TextColor3 = Color3.fromRGB(255, 255, 255)
antiFallDamageQuestion.Font = Enum.Font.SourceSansBold
antiFallDamageQuestion.TextSize = 20
antiFallDamageQuestion.Parent = mainFrame
print("AntiFallDamageQuestion created")

-- Tooltip frame (hidden by default)
local tooltip = Instance.new("Frame")
tooltip.Size = UDim2.new(0, 260, 0, 120)
tooltip.Position = UDim2.new(0, 10, 0, 300)
tooltip.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
tooltip.BorderSizePixel = 0
tooltip.Visible = false
tooltip.Parent = mainFrame
print("Tooltip created")

local tooltipText = Instance.new("TextLabel")
tooltipText.Size = UDim2.new(1, -10, 1, -10)
tooltipText.Position = UDim2.new(0, 5, 0, 5)
tooltipText.BackgroundTransparency = 1
tooltipText.TextColor3 = Color3.fromRGB(220, 220, 255)
tooltipText.TextWrapped = true
tooltipText.Font = Enum.Font.SourceSans
tooltipText.TextSize = 14
tooltipText.Parent = tooltip
print("TooltipText created")

-- Platform for flying
local platform = Instance.new("Part")
platform.Size = Vector3.new(5, 1, 5)
platform.Anchored = true
platform.Transparency = 1
platform.CanCollide = true
platform.Name = "FlyPlatform"
platform.Parent = workspace
print("FlyPlatform created")

-- Toggles functions
local function toggleFly()
    flyEnabled = not flyEnabled
    platform.Transparency = flyEnabled and 0.5 or 1
    flyToggle.Text = "Fly Platform: " .. (flyEnabled and "ON (F)" or "OFF (F)")
    print("Fly toggled: ", flyEnabled)
end

local function toggleCFrameMove()
    cframeMoveEnabled = not cframeMoveEnabled
    cframeToggle.Text = "CFrame Move: " .. (cframeMoveEnabled and "ON" or "OFF")
    print("CFrame Move toggled: ", cframeMoveEnabled)
end

local function toggleDeathTP()
    deathTpEnabled = not deathTpEnabled
    deathTpToggle.Text = "Death TP: " .. (deathTpEnabled and "ON" or "OFF")
    print("Death TP toggled: ", deathTpEnabled)
end

local function toggleAutoHit()
    autoHitEnabled = not autoHitEnabled
    autoHitToggle.Text = "Auto Hit: " .. (autoHitEnabled and "ON" or "OFF")
    print("Auto Hit toggled: ", autoHitEnabled)
end

local function toggleCriticalHit()
    criticalHitEnabled = not criticalHitEnabled
    criticalHitToggle.Text = "Critical Hit: " .. (criticalHitEnabled and "ON" or "OFF")
    print("Critical Hit toggled: ", criticalHitEnabled)
end

local function toggleAntiFallDamage()
    antiFallDamageEnabled = not antiFallDamageEnabled
    antiFallDamageToggle.Text = "Anti Fall Damage: " .. (antiFallDamageEnabled and "ON" or "OFF")
    print("Anti Fall Damage toggled: ", antiFallDamageEnabled)
end

-- User input tracking
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if deathTpEnabled then
        if input.UserInputType == Enum.UserInputType.MouseButton3 then -- Middle mouse click
            local char = plr.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp then
                checkpointCFrame = hrp.CFrame
                print("Checkpoint saved!")
            end
        end

        if input.KeyCode == Enum.KeyCode.T then
            local char = plr.Character
            local hrp = char and char:FindFirstChild("HumanoidRootPart")
            if hrp and checkpointCFrame then
                hrp.CFrame = checkpointCFrame
                print("Teleported to checkpoint!")
            else
                print("No checkpoint saved yet!")
            end
        end
    end

    -- Other controls
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then keys.W = true end
        if input.KeyCode == Enum.KeyCode.A then keys.A = true end
        if input.KeyCode == Enum.KeyCode.S then keys.S = true end
        if input.KeyCode == Enum.KeyCode.D then keys.D = true end

        if input.KeyCode == Enum.KeyCode.F then
            toggleFly()
        end
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.W then keys.W = false end
        if input.KeyCode == Enum.KeyCode.A then keys.A = false end
        if input.KeyCode == Enum.KeyCode.S then keys.S = false end
        if input.KeyCode == Enum.KeyCode.D then keys.D = false end
    end
end)

-- Speed input logic
speedInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local val = tonumber(speedInput.Text)
        if val and val > 0 then
            cframeSpeed = val
            speedInput.Text = tostring(cframeSpeed)
            print("CFrame speed updated to: ", cframeSpeed)
        else
            speedInput.Text = tostring(cframeSpeed)
            print("Invalid speed input, reverted to: ", cframeSpeed)
        end
    end
end)

-- Toggle button connections
cframeToggle.MouseButton1Click:Connect(toggleCFrameMove)
flyToggle.MouseButton1Click:Connect(toggleFly)
deathTpToggle.MouseButton1Click:Connect(toggleDeathTP)
autoHitToggle.MouseButton1Click:Connect(toggleAutoHit)
criticalHitToggle.MouseButton1Click:Connect(toggleCriticalHit)
antiFallDamageToggle.MouseButton1Click:Connect(toggleAntiFallDamage)

-- Tooltip toggles
deathTpQuestion.MouseButton1Click:Connect(function()
    if tooltip.Visible and tooltipText.Text == "Death TP:\nScroll wheel click saves checkpoint.\nPress T to teleport back.\npress T the second you die (only from void)." then
        tooltip.Visible = false
    else
        tooltip.Visible = true
        tooltipText.Text = "Death TP:\nScroll wheel click saves checkpoint.\nPress T to teleport back.\nTeleport on death."
    end
end)

autoHitQuestion.MouseButton1Click:Connect(function()
    if tooltip.Visible and tooltipText.Text == "Auto Hit:\nIt's not a kill aura.\nWhen you look at people in your range, it starts automatically hitting.\nIt's like an auto clicker without the annoying warning." then
        tooltip.Visible = false
    else
        tooltip.Visible = true
        tooltipText.Text = "Auto Hit:\nIt's not a kill aura.\nWhen you look at people in your range, it starts automatically hitting.\nIt's like an auto clicker without the annoying warning."
    end
end)

criticalHitQuestion.MouseButton1Click:Connect(function()
    if tooltip.Visible and tooltipText.Text == "Critical Hit:\nAuto Criticals kinda buggy tho but if you combine it with kill aura you will be unstoppable." then
        tooltip.Visible = false
    else
        tooltip.Visible = true
        tooltipText.Text = "Critical Hit:\nAuto Criticals kinda buggy tho but if you combine it with kill aura you will be unstoppablez."
    end
end)

antiFallDamageQuestion.MouseButton1Click:Connect(function()
    if tooltip.Visible and tooltipText.Text == "Anti Fall Damage:\nBetter use it at bedwars or basic fight because it can be annoying." then
        tooltip.Visible = false
    else
        tooltip.Visible = true
        tooltipText.Text = "Anti Fall Damage:\nBetter use it at bedwars or basic fight because it can be annoying."
    end
end)

-- Fly platform position update and CFrame movement
RunService.Heartbeat:Connect(function()
    local char = plr.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    if flyEnabled then
        platform.Transparency = 0.5
        platform.Position = hrp.Position - Vector3.new(0, hrp.Size.Y/2 + 1, 0)
    else
        platform.Transparency = 1
    end

    if cframeMoveEnabled then
        local camera = workspace.CurrentCamera
        if not camera then return end
        local moveDir = Vector3.new(0, 0, 0)
        if keys.W then moveDir = moveDir + camera.CFrame.LookVector end
        if keys.S then moveDir = moveDir - camera.CFrame.LookVector end
        if keys.A then moveDir = moveDir - camera.CFrame.RightVector end
        if keys.D then moveDir = moveDir + camera.CFrame.RightVector end

        moveDir = Vector3.new(moveDir.X, 0, moveDir.Z)
        if moveDir.Magnitude > 0 then
            moveDir = moveDir.Unit
            hrp.CFrame = hrp.CFrame + moveDir * cframeSpeed
        end
    end
end)

-- Auto Hit logic
local attackRange = 15
RunService.Heartbeat:Connect(function()
    if not autoHitEnabled then return end
    if not plr.Character then return end
    
    local tool = plr.Character:FindFirstChildOfClass("Tool")
    if not tool then return end
    
    local hrp = plr.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local enemyNearby = false
    local camera = workspace.CurrentCamera
    if not camera then return end

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= plr and player.Character then
            local targetHRP = player.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                local distance = (hrp.Position - targetHRP.Position).Magnitude
                if distance <= attackRange then
                    local directionToTarget = (targetHRP.Position - hrp.Position).Unit
                    local lookVector = camera.CFrame.LookVector
                    local dot = directionToTarget:Dot(lookVector)
                    if dot > 0.5 then
                        enemyNearby = true
                        break
                    end
                end
            end
        end
    end

    if enemyNearby then
        tool:Activate()
        print("Auto Hit triggered!")
    end
end)

-- Critical Hit logic
local function simulateFall()
    local character = plr.Character
    local hum = character and character:FindFirstChild("Humanoid")
    local root = character and character:FindFirstChild("HumanoidRootPart")
    if hum and root then
        local originalState = hum:GetState()
        local originalVelocity = root.Velocity
        if originalState ~= Enum.HumanoidStateType.Landed then
            hum:ChangeState(Enum.HumanoidStateType.Freefall)
            root.Velocity = Vector3.new(originalVelocity.X, -1.5, originalVelocity.Z)
            wait(0.01)
            root.Velocity = Vector3.new(originalVelocity.X, 0, originalVelocity.Z)
            hum:ChangeState(originalState)
            print("Critical hit triggered with original float effect!")
        else
            print("Critical hit skipped: Player is grounded")
        end
    end
end

local function onToolEquipped(tool)
    if tool:IsA("Tool") then
        tool.Activated:Connect(function()
            if criticalHitEnabled then
                simulateFall()
            end
        end)
    end
end

if plr.Character then
    local tool = plr.Character:FindFirstChildOfClass("Tool")
    if tool then
        onToolEquipped(tool)
        print("Initialized critical hit for existing tool")
    end
end

plr.CharacterAdded:Connect(function(character)
    local root = character:WaitForChild("HumanoidRootPart")
    print("Character loaded, setting up tool detection")
    character.ChildAdded:Connect(function(child)
        if child:IsA("Tool") then
            onToolEquipped(child)
            print("New tool equipped, critical hit enabled")
        end
    end)
end)

-- Anti Fall Damage logic
local function getChar()
    local char = plr.Character or plr.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    local hum = char:WaitForChild("Humanoid")
    return char, hrp, hum
end

RunService.Heartbeat:Connect(function()
    if not antiFallDamageEnabled then return end
    local char, hrp, hum = getChar()
    if not hrp or not hum then return end

    local falling = hum:GetState() == Enum.HumanoidStateType.Freefall
    local fallingFast = hrp.Velocity.Y < -40

    if falling and fallingFast then
        hum:ChangeState(Enum.HumanoidStateType.Jumping)
        print("Anti fall damage triggered!")
    end
end)

print("GUI with Anti Fall Damage loaded")
